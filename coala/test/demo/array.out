; ModuleID = 'Coala'
source_filename = "Coala"

@fmt = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@fmt.1 = private unnamed_addr constant [4 x i8] c"%g\0A\00", align 1
@"\221. Array of Int of size 3\22" = private unnamed_addr constant [27 x i8] c"1. Array of Int of size 3\0A\00", align 1
@"\22 \22" = private unnamed_addr constant [3 x i8] c" \0A\00", align 1
@"\22Accessing the elements of this array\22" = private unnamed_addr constant [38 x i8] c"Accessing the elements of this array\0A\00", align 1
@"\22 \22.2" = private unnamed_addr constant [3 x i8] c" \0A\00", align 1
@"\22---------------------------------------\22" = private unnamed_addr constant [41 x i8] c"---------------------------------------\0A\00", align 1
@"\22 \22.3" = private unnamed_addr constant [3 x i8] c" \0A\00", align 1
@"\222. Array of Bool of size 2\22" = private unnamed_addr constant [28 x i8] c"2. Array of Bool of size 2\0A\00", align 1
@"\22 \22.4" = private unnamed_addr constant [3 x i8] c" \0A\00", align 1
@"\22Accessing the elements of this array\22.5" = private unnamed_addr constant [38 x i8] c"Accessing the elements of this array\0A\00", align 1

declare i32 @printf(i8*, ...)

define void @main() {
entry:
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @"\221. Array of Int of size 3\22", i32 0, i32 0))
  %I = alloca [3 x i32]
  store [3 x i32] [i32 28, i32 1, i32 99], [3 x i32]* %I
  %printf1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @"\22 \22", i32 0, i32 0))
  %printf2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @"\22Accessing the elements of this array\22", i32 0, i32 0))
  %i = alloca i32
  store i32 0, i32* %i
  br label %while

while:                                            ; preds = %while_body, %entry
  %i3 = load i32, i32* %i
  %tmp = icmp slt i32 %i3, 3
  br i1 %tmp, label %while_body, label %while_end

while_body:                                       ; preds = %while
  %i4 = load i32, i32* %i
  %index = getelementptr inbounds [3 x i32], [3 x i32]* %I, i32 0, i32 %i4
  %array_access = load i32, i32* %index
  %printf5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i32 %array_access)
  %i6 = load i32, i32* %i
  %tmp7 = add i32 %i6, 1
  store i32 %tmp7, i32* %i
  br label %while

while_end:                                        ; preds = %while
  %printf8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @"\22 \22.2", i32 0, i32 0))
  %printf9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @"\22---------------------------------------\22", i32 0, i32 0))
  %printf10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @"\22 \22.3", i32 0, i32 0))
  %printf11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"\222. Array of Bool of size 2\22", i32 0, i32 0))
  %B = alloca [2 x i1]
  store [2 x i1] [i1 true, i1 false], [2 x i1]* %B
  %printf12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @"\22 \22.4", i32 0, i32 0))
  %printf13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @"\22Accessing the elements of this array\22.5", i32 0, i32 0))
  %i14 = alloca i32
  store i32 0, i32* %i14
  br label %while15

while15:                                          ; preds = %while_body18, %while_end
  %i16 = load i32, i32* %i14
  %tmp17 = icmp slt i32 %i16, 2
  br i1 %tmp17, label %while_body18, label %while_end25

while_body18:                                     ; preds = %while15
  %i19 = load i32, i32* %i14
  %index20 = getelementptr inbounds [2 x i1], [2 x i1]* %B, i32 0, i32 %i19
  %array_access21 = load i1, i1* %index20
  %printf22 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i1 %array_access21)
  %i23 = load i32, i32* %i14
  %tmp24 = add i32 %i23, 1
  store i32 %tmp24, i32* %i14
  br label %while15

while_end25:                                      ; preds = %while15
  ret void
}
