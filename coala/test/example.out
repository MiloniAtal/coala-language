; ModuleID = 'MicroC'
source_filename = "MicroC"

@fmt = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@"\22abcde\22" = private unnamed_addr constant [7 x i8] c"abcde\0A\00", align 1

declare i32 @printf(i8*, ...)

define void @main() {
entry:
  %x = alloca i32, align 4
  %s = alloca i8*, align 8
  %r = alloca i8*, align 8
  store i32 1, i32* %x, align 4
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @"\22abcde\22", i32 0, i32 0), i8** %s, align 8
  %s1 = load i8*, i8** %s, align 8
  store i8* %s1, i8** %r, align 8
  %x2 = load i32, i32* %x, align 4
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i32 %x2)
  %s3 = load i8*, i8** %s, align 8
  %printf4 = call i32 (i8*, ...) @printf(i8* %s3)
  %r5 = load i8*, i8** %r, align 8
  %printf6 = call i32 (i8*, ...) @printf(i8* %r5)
  ret void
}
